name: Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.0

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Destroy old deployment
        id: destroy
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run:
          terraform destroy -auto-approve -var "DATABASE_URL=${{ secrets.DATABASE_URL }}"
          -var "CRYPTO_ITERATIONS=${{ secrets.CRYPTO_ITERATIONS }}"
          -var "CRYPTO_KEYLEN=${{ secrets.CRYPTO_KEYLEN }}"
          -var "JWT_SECRET=${{ secrets.JWT_SECRET }}"

      - name: Terraform Plan
        id: plan
        run: terraform plan -var "DATABASE_URL=${{ secrets.DATABASE_URL }}"
          -var "CRYPTO_ITERATIONS=${{ secrets.CRYPTO_ITERATIONS }}"
          -var "CRYPTO_KEYLEN=${{ secrets.CRYPTO_KEYLEN }}"
          -var "JWT_SECRET=${{ secrets.JWT_SECRET }}"

      - name: Terraform Apply
        id: apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run:
          terraform apply -auto-approve -var "DATABASE_URL=${{ secrets.DATABASE_URL }}"
          -var "CRYPTO_ITERATIONS=${{ secrets.CRYPTO_ITERATIONS }}"
          -var "CRYPTO_KEYLEN=${{ secrets.CRYPTO_KEYLEN }}"
          -var "JWT_SECRET=${{ secrets.JWT_SECRET }}"
