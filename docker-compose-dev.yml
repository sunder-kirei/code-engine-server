services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - zookeeper
    restart: unless-stopped

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${HOST_IP}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - kafka.env
    networks:
      - zookeeper
      - kafka
    depends_on:
      - zookeeper
    scale: 2
    restart: unless-stopped

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: development
    privileged: true
    volumes:
      - .:/usr/app
      - /usr/app/node_modules
    ports:
      - 3000:3000
    depends_on:
      - zookeeper
      - kafka
    networks:
      - kafka

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
      target: development
    privileged: true
    volumes:
      - .:/usr/app
      - /usr/app/node_modules
    ports:
      - 4000:4000
    depends_on:
      - zookeeper
      - kafka
    networks:
      - kafka

networks:
  zookeeper:
    driver: bridge
  kafka:
    driver: bridge
